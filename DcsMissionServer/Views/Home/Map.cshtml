@using System.Text.Json
@model UnitsViewModel

@{
    ViewData["Title"] = "Map";
}

<h1>Map</h1>
<canvas id="dcsMap" width="1000" height=10000>

</canvas>

<script src="~/lib/signalr/signalr.js"></script>

<script>
    var units = @Html.Raw(@JsonSerializer.Serialize(Model.Units))
        console.log(JSON.stringify(units));

    var canvas = document.getElementById("dcsMap");
    var ctx = canvas.getContext("2d");
    var scales = null;

    function calcScale(units){
        var minX = Math.min(...units.map(unit => unit.PosX));
        var maxX = Math.max(...units.map(unit => unit.PosX));
        var minY = Math.min(...units.map(unit => unit.PosY));
        var maxY = Math.max(...units.map(unit => unit.PosY));

        var scaleX = 950 / Math.abs(maxX - minX);
        var scaleY = 950 / Math.abs(maxY - minY);
        var scale = Math.min(scaleX, scaleY);

        var shiftX = minX < 0 ? minX * scale * -1: 0;
        var shiftY = minY > 0 ? minY * scale * -1: 0;

        return {
            scale: scale,
            shiftX: shiftX,
            shiftY: shiftY
        }
    }

    function graphPos(unit, scales){
        return {
            y: unit.PosX * scales.scale + scales.shiftX - 500, // flipped here
            x: unit.PosY * scales.scale + scales.shiftY,
        }
    }

    function posGraph(point, scales){
        return {
            x: (point.y - scales.shiftX + 500) / scales.scale,
            y: (point.x - scales.shiftY) / scales.scale
        }
    }

    function redraw(units){
        ctx.clearRect(0, 0, 1000, 1000);
        if(!scales)
            scales = calcScale(units);
        units.forEach(unit => {
            var pos = graphPos(unit, scales);
            // console.log(`drawing pos  ${JSON.stringify(unit)}`);
            // console.log(`Unposed: ${JSON.stringify(posGraph(pos, scales))}`);
            console.log(`drawing unit ${JSON.stringify(pos)}`);
            // console.log(JSON.stringify(scales));
            ctx.fillStyle = unit.UnitName == "Player 0" ? "Green" : 
                unit.CoalitionId == 1 ? "Red" : 
                "Blue";
            ctx.fillRect(pos.x, -pos.y, 10, 10);
        });
    }

    redraw(units);

    var connection = new signalR
        .HubConnectionBuilder()
        .withUrl("/unitsHub")
        .build();

    connection.on("UpdateUnits", (units) => {
        redraw(JSON.parse(units));
    });

    connection.start()
        .catch(err => `Failed to start message connection, err: ${err}`);
</script>

